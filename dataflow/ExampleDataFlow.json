{
	"name": "ExampleDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ADLSSink",
						"type": "DatasetReference"
					},
					"name": "ADLSSink"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSynapseMovieRatings",
						"type": "DatasetReference"
					},
					"name": "SynapseSink"
				}
			],
			"transformations": [
				{
					"name": "SelectTest"
				},
				{
					"name": "FilterTest"
				},
				{
					"name": "WithPrimGenre"
				},
				{
					"name": "WindowFunction"
				},
				{
					"name": "AggregateExample"
				}
			],
			"script": "source(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tlimit: 100,\n\twildcardPaths:['output']) ~> ADLSSink\nADLSSink select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tyear,\n\t\t{Rotten Tomato} = {Rotton Tomato}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTest\nSelectTest filter(toInteger(year) >1951) ~> FilterTest\nFilterTest derive(PrimaryGenre = iif (instr(genres, '|') == 0, genres, substring(genres,1,instr(genres, '|') - 1)),\n\t\tRottenTomato = toInteger({Rotten Tomato})) ~> WithPrimGenre\nWithPrimGenre window(over(year,\n\t\tPrimaryGenre),\n\tasc(RottenTomato, true),\n\tRatingsRank = rank()) ~> WindowFunction\nWindowFunction aggregate(groupBy(PrimaryGenre,\n\t\tyear),\n\tAverageRating = avg(RottenTomato),\n\t\tHighestRated = first(title),\n\t\tLowestRated = last(title),\n\t\tNumberOfMovies = count()) ~> AggregateExample\nAggregateExample sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['PrimaryGenre','year'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SynapseSink"
		}
	}
}